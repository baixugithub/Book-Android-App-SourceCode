<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<module name="Checker">
  <!-- 单个文件最大字符数 "/-->
  <module name="FileLength">
    <property name ="max" value ="5000" />
  </module>
  
  <!-- 是否符合tab规范 "/-->
  <module name="FileTabCharacter"/>
  
  <!-- 检测代码中多余的空格 -->
  <module name="RegexpSingleline">
    <property name="format" value="\s+$"/>
    <property name="message" value="Line has trailing spaces."/>
  </module>

  <!-- 在'for'和'if'后面要加上空格 -->
  <module name="RegexpSingleline">
    <property name="format" value="^\s*(for|if)[^ ]\("/>
    <property name="message" value="Space needed before opening parenthesis."/>
  </module>

  <!-- 在':'两边要加上空格 -->
  <module name="RegexpSingleline">
    <property name="format" value="^\s*for \(.*?([^ ]:|:[^ ])"/>
    <property name="message" value="Space needed around ':' character."/>
  </module>

  <module name="TreeWalker">
    <!-- javaDoc注释检查规范 -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <!--module name="JavadocMethod"/-->
    <!--module name="JavadocType"/-->
    <!--module name="JavadocVariable"/-->
    <!--module name="JavadocStyle"/-->

    <!-- 方法名命名规则 -->
    <module name="MethodName">
      <property name="format" value="^[_a-z][a-zA-Z0-9_]*$"/>
    </module>
    
    <!-- 类、接口、ENUM、ANNOTATION命名规则 -->
    <module name="TypeName">
      <property name="format" value="^[A-Z][a-zA-Z0-9_]*$"/>
    </module>
    
    <!-- imports检查规范 -->
    <!-- See http://checkstyle.sf.net/config_import.html -->
    <!-- 必须导入类的完整路径，即不能使用*导入所需的类 -->
    <module name="AvoidStarImport"/>
    <!-- 检查是否从非法的包中导入了类 illegalPkgs: 定义非法的包名称-->
    <module name="IllegalImport"/>
    <!-- 检查是否导入了不必显示导入的类-->
    <module name="RedundantImport"/>
    <!-- 检查是否导入的包没有使用-->
    <module name="UnusedImports"/>

    <!-- size检查规范 -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <!-- 每行最大字符数 -->
    <module name="LineLength">
      <property name="max" value="200"/>
    </module>
    
    <!-- 每个方法最大行数 -->
    <module name="MethodLength">
      <property name="max" value="300"/>
    </module>
    
    <!-- whitespace检查规范                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="INC, DEC, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT, DOT, INDEX_OP"/>
    </module>
    <module name="OperatorWrap">
    	<!--don't check PLUS, because auto generation of toString() -->
		<property name="tokens" value="QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, MINUS, STAR, MOD, SR, BSR, GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, TYPE_EXTENSION_AND, LITERAL_INSTANCEOF"/>
    </module>

    <!-- 代码块检查规范. You know, those {}'s         -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <!--option: 定义左大括号'{'显示位置，eol在同一行显示，nl在下一行显示
          maxLineLength: 大括号'{'所在行行最多容纳的字符数
          tokens: 该属性适用的类型，例：CLASS_DEF,INTERFACE_DEF,METHOD_DEF,CTOR_DEF -->
    <module name="LeftCurly">
      <property name="option" value="eol"/>
    </module>
    <!--是否允许一行代码情况下没有用{}包围, 比如常见的if-->
    <module name="NeedBraces">
      <property name="allowSingleLineStatement" value="false"/>
    </module>
    <!-- Checks the placement of right curly braces ('}') for  else, try, and catch tokens. The policy to verify is specified using property  option.
          option: 右大括号是否单独一行显示
          tokens: 定义检查的类型  -->
    <module name="RightCurly">
      <property name="option" value="alone"/>
    </module>

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="ArrayTypeStyle"/>
    <!--module name="FinalParameters"/-->
    <!--<module name="TodoComment"/>-->
    <module name="UpperEll"/>
    <module name="EmptyCatchBlock"><!-- 是否允许空catch -->
        <property name="exceptionVariableName" value="expected"/>
    </module>
  </module>
</module>